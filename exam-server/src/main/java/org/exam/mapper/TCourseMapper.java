package org.exam.mapper;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.exam.bean.entity.TCourse;
import org.exam.bean.entity.TCourseExample;

public interface TCourseMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_course
     *
     * @mbg.generated Sat Mar 30 14:43:46 CST 2019
     */
    long countByExample(TCourseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_course
     *
     * @mbg.generated Sat Mar 30 14:43:46 CST 2019
     */
    int deleteByExample(TCourseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_course
     *
     * @mbg.generated Sat Mar 30 14:43:46 CST 2019
     */
    @Delete({
        "delete from t_course",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_course
     *
     * @mbg.generated Sat Mar 30 14:43:46 CST 2019
     */
    @Insert({
        "insert into t_course (id, course_no, ",
        "course_name, is_del, create_time, ",
        "update_time, creator, ",
        "updater, version)",
        "values (#{id,jdbcType=BIGINT}, #{courseNo,jdbcType=BIGINT}, ",
        "#{courseName,jdbcType=VARCHAR}, #{isDel,jdbcType=BIT}, #{createTime,jdbcType=BIGINT}, ",
        "#{updateTime,jdbcType=BIGINT}, #{creator,jdbcType=INTEGER}, ",
        "#{updater,jdbcType=INTEGER}, #{version,jdbcType=INTEGER})"
    })
    int insert(TCourse record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_course
     *
     * @mbg.generated Sat Mar 30 14:43:46 CST 2019
     */
    int insertSelective(TCourse record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_course
     *
     * @mbg.generated Sat Mar 30 14:43:46 CST 2019
     */
    List<TCourse> selectByExample(TCourseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_course
     *
     * @mbg.generated Sat Mar 30 14:43:46 CST 2019
     */
    @Select({
        "select",
        "id, course_no, course_name, is_del, create_time, update_time, creator, updater, ",
        "version",
        "from t_course",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @ResultMap("org.exam.mapper.TCourseMapper.BaseResultMap")
    TCourse selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_course
     *
     * @mbg.generated Sat Mar 30 14:43:46 CST 2019
     */
    int updateByExampleSelective(@Param("record") TCourse record, @Param("example") TCourseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_course
     *
     * @mbg.generated Sat Mar 30 14:43:46 CST 2019
     */
    int updateByExample(@Param("record") TCourse record, @Param("example") TCourseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_course
     *
     * @mbg.generated Sat Mar 30 14:43:46 CST 2019
     */
    int updateByPrimaryKeySelective(TCourse record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_course
     *
     * @mbg.generated Sat Mar 30 14:43:46 CST 2019
     */
    @Update({
        "update t_course",
        "set course_no = #{courseNo,jdbcType=BIGINT},",
          "course_name = #{courseName,jdbcType=VARCHAR},",
          "is_del = #{isDel,jdbcType=BIT},",
          "create_time = #{createTime,jdbcType=BIGINT},",
          "update_time = #{updateTime,jdbcType=BIGINT},",
          "creator = #{creator,jdbcType=INTEGER},",
          "updater = #{updater,jdbcType=INTEGER},",
          "version = #{version,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(TCourse record);
}