package org.exam.mapper;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.exam.bean.entity.TUser;
import org.exam.bean.entity.TUserExample;

public interface TUserMapper {
    /**
     * 登录
     * @param username
     * @return
     */
    TUser loadUserByUsername(String username);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Sat Mar 30 22:51:53 CST 2019
     */
    long countByExample(TUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Sat Mar 30 22:51:53 CST 2019
     */
    int deleteByExample(TUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Sat Mar 30 22:51:53 CST 2019
     */
    @Delete({
        "delete from t_user",
        "where user_id = #{userId,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Sat Mar 30 22:51:53 CST 2019
     */
    @Insert({
        "insert into t_user (user_id, name, ",
        "mobile_phone, telephone, ",
        "address, username, ",
        "password, sex, id_card, ",
        "nation_id, user_face, ",
        "marital_status, native_place, ",
        "birthday, email, ",
        "enrollment_date, graduation_date, ",
        "is_del, create_time, ",
        "update_time, creator, ",
        "updater, version)",
        "values (#{userId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, ",
        "#{mobilePhone,jdbcType=CHAR}, #{telephone,jdbcType=VARCHAR}, ",
        "#{address,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, ",
        "#{password,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{idCard,jdbcType=VARCHAR}, ",
        "#{nationId,jdbcType=BIGINT}, #{userFace,jdbcType=VARCHAR}, ",
        "#{maritalStatus,jdbcType=BIGINT}, #{nativePlace,jdbcType=VARCHAR}, ",
        "#{birthday,jdbcType=BIGINT}, #{email,jdbcType=VARCHAR}, ",
        "#{enrollmentDate,jdbcType=BIGINT}, #{graduationDate,jdbcType=BIGINT}, ",
        "#{isDel,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{updateTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=BIGINT}, ",
        "#{updater,jdbcType=BIGINT}, #{version,jdbcType=BIGINT})"
    })
    int insert(TUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Sat Mar 30 22:51:53 CST 2019
     */
    int insertSelective(TUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Sat Mar 30 22:51:53 CST 2019
     */
    List<TUser> selectByExample(TUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Sat Mar 30 22:51:53 CST 2019
     */
    @Select({
        "select",
        "user_id, name, mobile_phone, telephone, address, username, password, sex, id_card, ",
        "nation_id, user_face, marital_status, native_place, birthday, email, enrollment_date, ",
        "graduation_date, is_del, create_time, update_time, creator, updater, version",
        "from t_user",
        "where user_id = #{userId,jdbcType=BIGINT}"
    })
    @ResultMap("org.exam.mapper.TUserMapper.BaseResultMap")
    TUser selectByPrimaryKey(Long userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Sat Mar 30 22:51:53 CST 2019
     */
    int updateByExampleSelective(@Param("record") TUser record, @Param("example") TUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Sat Mar 30 22:51:53 CST 2019
     */
    int updateByExample(@Param("record") TUser record, @Param("example") TUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Sat Mar 30 22:51:53 CST 2019
     */
    int updateByPrimaryKeySelective(TUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Sat Mar 30 22:51:53 CST 2019
     */
    @Update({
        "update t_user",
        "set name = #{name,jdbcType=VARCHAR},",
          "mobile_phone = #{mobilePhone,jdbcType=CHAR},",
          "telephone = #{telephone,jdbcType=VARCHAR},",
          "address = #{address,jdbcType=VARCHAR},",
          "username = #{username,jdbcType=VARCHAR},",
          "password = #{password,jdbcType=VARCHAR},",
          "sex = #{sex,jdbcType=CHAR},",
          "id_card = #{idCard,jdbcType=VARCHAR},",
          "nation_id = #{nationId,jdbcType=BIGINT},",
          "user_face = #{userFace,jdbcType=VARCHAR},",
          "marital_status = #{maritalStatus,jdbcType=BIGINT},",
          "native_place = #{nativePlace,jdbcType=VARCHAR},",
          "birthday = #{birthday,jdbcType=BIGINT},",
          "email = #{email,jdbcType=VARCHAR},",
          "enrollment_date = #{enrollmentDate,jdbcType=BIGINT},",
          "graduation_date = #{graduationDate,jdbcType=BIGINT},",
          "is_del = #{isDel,jdbcType=BIT},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP},",
          "creator = #{creator,jdbcType=BIGINT},",
          "updater = #{updater,jdbcType=BIGINT},",
          "version = #{version,jdbcType=BIGINT}",
        "where user_id = #{userId,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(TUser record);
}