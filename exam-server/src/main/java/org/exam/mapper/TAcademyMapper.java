package org.exam.mapper;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.exam.bean.entity.TAcademy;
import org.exam.bean.entity.TAcademyExample;

public interface TAcademyMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_academy
     *
     * @mbg.generated Tue Apr 02 14:50:37 CST 2019
     */
    long countByExample(TAcademyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_academy
     *
     * @mbg.generated Tue Apr 02 14:50:37 CST 2019
     */
    int deleteByExample(TAcademyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_academy
     *
     * @mbg.generated Tue Apr 02 14:50:37 CST 2019
     */
    @Delete({
        "delete from t_academy",
        "where academy_id = #{academyId,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long academyId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_academy
     *
     * @mbg.generated Tue Apr 02 14:50:37 CST 2019
     */
    @Insert({
        "insert into t_academy (academy_id, academy_name, ",
        "creator, updater, ",
        "version, is_del, create_time, ",
        "update_time)",
        "values (#{academyId,jdbcType=BIGINT}, #{academyName,jdbcType=VARCHAR}, ",
        "#{creator,jdbcType=BIGINT}, #{updater,jdbcType=BIGINT}, ",
        "#{version,jdbcType=INTEGER}, #{isDel,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{updateTime,jdbcType=TIMESTAMP})"
    })
    int insert(TAcademy record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_academy
     *
     * @mbg.generated Tue Apr 02 14:50:37 CST 2019
     */
    int insertSelective(TAcademy record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_academy
     *
     * @mbg.generated Tue Apr 02 14:50:37 CST 2019
     */
    List<TAcademy> selectByExample(TAcademyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_academy
     *
     * @mbg.generated Tue Apr 02 14:50:37 CST 2019
     */
    @Select({
        "select",
        "academy_id, academy_name, creator, updater, version, is_del, create_time, update_time",
        "from t_academy",
        "where academy_id = #{academyId,jdbcType=BIGINT}"
    })
    @ResultMap("org.exam.mapper.TAcademyMapper.BaseResultMap")
    TAcademy selectByPrimaryKey(Long academyId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_academy
     *
     * @mbg.generated Tue Apr 02 14:50:37 CST 2019
     */
    int updateByExampleSelective(@Param("record") TAcademy record, @Param("example") TAcademyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_academy
     *
     * @mbg.generated Tue Apr 02 14:50:37 CST 2019
     */
    int updateByExample(@Param("record") TAcademy record, @Param("example") TAcademyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_academy
     *
     * @mbg.generated Tue Apr 02 14:50:37 CST 2019
     */
    int updateByPrimaryKeySelective(TAcademy record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_academy
     *
     * @mbg.generated Tue Apr 02 14:50:37 CST 2019
     */
    @Update({
        "update t_academy",
        "set academy_name = #{academyName,jdbcType=VARCHAR},",
          "creator = #{creator,jdbcType=BIGINT},",
          "updater = #{updater,jdbcType=BIGINT},",
          "version = #{version,jdbcType=INTEGER},",
          "is_del = #{isDel,jdbcType=BIT},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP}",
        "where academy_id = #{academyId,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(TAcademy record);
}