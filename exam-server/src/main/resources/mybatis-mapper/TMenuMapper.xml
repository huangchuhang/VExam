<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.exam.mapper.TMenuMapper">
    <resultMap id="BaseResultMap" type="org.exam.bean.entity.TMenu">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="path" jdbcType="VARCHAR" property="path"/>
        <result column="component" jdbcType="VARCHAR" property="component"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="icon_cls" jdbcType="VARCHAR" property="iconCls"/>
        <result column="keep_alive" jdbcType="BIT" property="keepAlive"/>
        <result column="require_auth" jdbcType="BIT" property="requireAuth"/>
        <result column="parent_id" jdbcType="INTEGER" property="parentId"/>
        <result column="is_del" jdbcType="BIT" property="isDel"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="update_time" jdbcType="BIGINT" property="updateTime"/>
        <result column="creater" jdbcType="INTEGER" property="creater"/>
        <result column="updater" jdbcType="INTEGER" property="updater"/>
        <result column="version" jdbcType="INTEGER" property="version"/>

        <collection property="roles" ofType="org.exam.bean.entity.TRole">
            <id column="id1" property="id"/>
            <result column="name1" property="name"/>
            <result column="nameZh1" property="namezh"/>
        </collection>

        <collection property="children" ofType="org.exam.bean.entity.TMenu">
            <id column="id2" property="id"/>
            <result column="path2" property="path" jdbcType="VARCHAR"/>
            <result column="component2" property="component" jdbcType="VARCHAR"/>
            <result column="name2" property="name" jdbcType="VARCHAR"/>
            <result column="icon_cls2" property="iconCls" jdbcType="VARCHAR"/>
            <result column="keep_alive2" property="keepAlive"/>
            <result column="require_auth2" property="requireAuth"/>
            <collection property="children" ofType="org.exam.bean.entity.TMenu" javaType="ArrayList">
                <id column="id3" property="id"/>
                <result column="name3" property="name" jdbcType="VARCHAR"/>
            </collection>
        </collection>
    </resultMap>
    <resultMap id="BaseResultTree" type="org.exam.bean.entity.TMenu">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="path" jdbcType="VARCHAR" property="path"/>
        <result column="component" jdbcType="VARCHAR" property="component"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="icon_cls" jdbcType="VARCHAR" property="iconCls"/>
        <result column="keep_alive" jdbcType="BIT" property="keepAlive"/>
        <result column="require_auth" jdbcType="BIT" property="requireAuth"/>
        <result column="parent_id" jdbcType="INTEGER" property="parentId"/>
        <result column="is_del" jdbcType="BIT" property="isDel"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="update_time" jdbcType="BIGINT" property="updateTime"/>
        <result column="creater" jdbcType="INTEGER" property="creater"/>
        <result column="updater" jdbcType="INTEGER" property="updater"/>
        <result column="version" jdbcType="INTEGER" property="version"/>

        <collection property="roles" ofType="org.exam.bean.entity.TRole">
            <id column="id1" property="id"/>
            <result column="name1" property="name"/>
            <result column="nameZh1" property="namezh"/>
        </collection>

        <collection property="children" ofType="org.exam.bean.entity.TMenu" select="getMenusByParentId" column="id" javaType="java.util.ArrayList">
        </collection>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, url, path, component, name, icon_cls, keep_alive, require_auth, parent_id, is_del,
        create_time, update_time, creater, updater, version
    </sql>
    <select id="selectByExample" parameterType="org.exam.bean.entity.TMenuExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_menu
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="org.exam.bean.entity.TMenuExample">
        delete from t_menu
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insertSelective"
            keyColumn="id"
            keyProperty="id"
            parameterType="org.exam.bean.entity.TMenu"
            useGeneratedKeys="true">
        <selectKey keyProperty="sort" order="BEFORE" resultType="byte">
            select max(sort) from t_menu
            <if test="parentId != null">
              where parent_id = #{parentId} and is_del = 0
            </if>
        </selectKey>
        insert into t_menu
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="url != null">
                url,
            </if>
            <if test="path != null">
                path,
            </if>
            <if test="component != null">
                component,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="iconCls != null">
                icon_cls,
            </if>
            <if test="keepAlive != null">
                keep_alive,
            </if>
            <if test="requireAuth != null">
                require_auth,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="isDel != null">
                is_del,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="creater != null">
                creater,
            </if>
            <if test="updater != null">
                updater,
            </if>
            <if test="version != null">
                version,
            </if>
            <if test="sort != null">
                sort,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="path != null">
                #{path,jdbcType=VARCHAR},
            </if>
            <if test="component != null">
                #{component,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="iconCls != null">
                #{iconCls,jdbcType=VARCHAR},
            </if>
            <if test="keepAlive != null">
                #{keepAlive,jdbcType=BIT},
            </if>
            <if test="requireAuth != null">
                #{requireAuth,jdbcType=BIT},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=INTEGER},
            </if>
            <if test="isDel != null">
                #{is_del,jdbcType=BIT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=BIGINT},
            </if>
            <if test="creater != null">
                #{creater,jdbcType=INTEGER},
            </if>
            <if test="updater != null">
                #{updater,jdbcType=INTEGER},
            </if>
            <if test="version != null">
                #{version,jdbcType=INTEGER},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.exam.bean.entity.TMenuExample" resultType="java.lang.Long">
        select count(*) from t_menu
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_menu
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.url != null">
                url = #{record.url,jdbcType=VARCHAR},
            </if>
            <if test="record.path != null">
                path = #{record.path,jdbcType=VARCHAR},
            </if>
            <if test="record.component != null">
                component = #{record.component,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.iconCls != null">
                icon_cls = #{record.iconCls,jdbcType=VARCHAR},
            </if>
            <if test="record.keepAlive != null">
                keep_alive = #{record.keepAlive,jdbcType=BIT},
            </if>
            <if test="record.requireAuth != null">
                require_auth = #{record.requireAuth,jdbcType=BIT},
            </if>
            <if test="record.parentId != null">
                parent_id = #{record.parentId,jdbcType=INTEGER},
            </if>
            <if test="record.isDel != null">
                is_del = #{record.is_del,jdbcType=BIT},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=BIGINT},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=BIGINT},
            </if>
            <if test="record.creater != null">
                creater = #{record.creater,jdbcType=INTEGER},
            </if>
            <if test="record.updater != null">
                updater = #{record.updater,jdbcType=INTEGER},
            </if>
            <if test="record.version != null">
                version = #{record.version,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_menu
        set id = #{record.id,jdbcType=INTEGER},
        url = #{record.url,jdbcType=VARCHAR},
        path = #{record.path,jdbcType=VARCHAR},
        component = #{record.component,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        icon_cls = #{record.iconCls,jdbcType=VARCHAR},
        keep_alive = #{record.keepAlive,jdbcType=BIT},
        require_auth = #{record.requireAuth,jdbcType=BIT},
        parent_id = #{record.parentId,jdbcType=INTEGER},
        is_del = #{record.isDel,jdbcType=BIT},
        create_time = #{record.createTime,jdbcType=BIGINT},
        update_time = #{record.updateTime,jdbcType=BIGINT},
        creater = #{record.creater,jdbcType=INTEGER},
        updater = #{record.updater,jdbcType=INTEGER},
        version = #{record.version,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="org.exam.bean.entity.TMenu">
        update t_menu
        <set>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="path != null">
                path = #{path,jdbcType=VARCHAR},
            </if>
            <if test="component != null">
                component = #{component,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="iconCls != null">
                icon_cls = #{iconCls,jdbcType=VARCHAR},
            </if>
            <if test="keepAlive != null">
                keep_alive = #{keepAlive,jdbcType=BIT},
            </if>
            <if test="requireAuth != null">
                require_auth = #{requireAuth,jdbcType=BIT},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=INTEGER},
            </if>
            <if test="isDel != null">
                is_del = #{is_del,jdbcType=BIT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=BIGINT},
            </if>
            <if test="creater != null">
                creater = #{creater,jdbcType=INTEGER},
            </if>
            <if test="updater != null">
                updater = #{updater,jdbcType=INTEGER},
            </if>
            <if test="version != null">
                version = #{version,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <insert id="insert" parameterType="org.exam.bean.entity.TMenu">
        insert into t_menu (id,
                            url,
                            path,
                            component,
                            name,
                            icon_cls,
                            keep_alive,
                            require_auth,
                            parent_id,
                            is_del,
                            create_time,
                            update_time,
                            creater,
                            updater,
                            version)
        values (#{id,jdbcType=INTEGER},
                #{url,jdbcType=VARCHAR},
                #{path,jdbcType=VARCHAR},
                #{component,jdbcType=VARCHAR},
                #{name,jdbcType=VARCHAR},
                #{iconCls,jdbcType=VARCHAR},
                #{keepAlive,jdbcType=BIT},
                #{requireAuth,jdbcType=BIT},
                #{parentId,jdbcType=INTEGER},
                #{isDel,jdbcType=BIT},
                #{createTime,jdbcType=BIGINT},
                #{updateTime,jdbcType=BIGINT},
                #{creater,jdbcType=INTEGER},
                #{updater,jdbcType=INTEGER},
                #{version,jdbcType=INTEGER})
    </insert>

    <select id="getAllMenu" resultMap="BaseResultMap">
        select m.*, r.`id` as rid, r.`name` as name, r.`nameZh` as namezh
        from t_menu m
                 left join t_menu_role mr on m.`id` = mr.`id`
                 left join t_role r on mr.`id` = r.`id`
        WHERE m.is_del = 0
        order by m.`id` asc
    </select>

    <select id="getMenusByUserId" parameterType="String" resultMap="BaseResultMap">
        select m1.`id`,
               m1.`path`,
               m1.`component`,
               m1.`icon_cls`,
               m1.`name`,
               m1.`require_auth`,
               m2.`component`   as component2,
               m2.`icon_cls`     as iconCls2,
               m2.`keep_alive`   as keepAlive2,
               m2.`name`        as name2,
               m2.`path`        as path2,
               m2.`require_auth` as requireAuth2
        from t_menu m1,
             t_menu m2
        where m1.`id` = m2.`parent_id`
          and m1.`id` != 1
          and m2.`id` in(select mr.`menu_id`
                         from t_user_role ur,
                              t_menu_role mr
                         where ur.`role_id` = mr.`role_id`
                           and ur.`user_id` = #{userId, jdbcType=VARCHAR})
          and m2.is_del = 0
        order by m1.sort, m2.sort;
    </select>

    <select id="getMenusByParentId" resultMap="BaseResultTree">
        select *
        from t_menu where parent_id = #{parentId} and is_del = 0;
    </select>
</mapper>