<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.exam.mapper.TUserMapper">
    <resultMap id="BaseResultMap" type="org.exam.bean.entity.TUser">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="phone" jdbcType="CHAR" property="phone"/>
        <result column="tele_phone" jdbcType="VARCHAR" property="telePhone"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="is_del" jdbcType="BIT" property="isDel"/>
        <result column="sex" jdbcType="BIT" property="sex"/>
        <result column="marital_status" jdbcType="BIT" property="maritalStatus"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="userface" jdbcType="VARCHAR" property="userface"/>
        <result column="id_card" jdbcType="VARCHAR" property="idCard"/>
        <result column="native_place" jdbcType="VARCHAR" property="nativePlace"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="update_time" jdbcType="BIGINT" property="updateTime"/>
        <result column="creater" jdbcType="INTEGER" property="creater"/>
        <result column="updater" jdbcType="INTEGER" property="updater"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
        <result column="enrollment_date" jdbcType="BIGINT" property="enrollmentDate"/>
        <result column="graduation_date" jdbcType="BIGINT" property="graduationDate"/>
        <result column="birthday" jdbcType="BIGINT" property="birthday"/>
        <association property="nation" javaType="org.exam.bean.entity.TNation">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
        </association>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, user_id, name, phone, tele_phone, address, is_del, username, password, userface,
        remark, create_time, update_time, creater, updater, version, sex, id_card,
        marital_status, native_place, birthday, email, enrollment_date, graduation_date
    </sql>

    <resultMap id="lazyLoadRoles" type="org.exam.bean.entity.TUser" extends="BaseResultMap">
        <collection property="roles" ofType="org.exam.bean.entity.TRole" javaType="java.util.ArrayList"
                    select="org.exam.mapper.TUserMapper.getRolesById" column="id">
        </collection>
    </resultMap>
    <resultMap id="eagerLoadRoles" type="org.exam.bean.entity.TUser" extends="BaseResultMap">
        <collection property="roles" ofType="org.exam.bean.entity.TRole">
            <id property="id" column="rid"/>
            <result property="name" column="name"/>
            <result property="namezh" column="nameZh"/>
        </collection>
    </resultMap>
    <select id="loadUserByUsername" resultMap="lazyLoadRoles">
        select *
        from t_user
        WHERE username = #{username}
          and is_del = 0;
    </select>
    <select id="getAllUsers" resultMap="BaseResultMap">
        select *
        from t_user
        WHERE
           is_del = 0;
    </select>
    <select id="getRolesById" resultType="org.exam.bean.entity.TRole">
        SELECT r.*
        FROM t_user_role ur,
             t_role r
        where ur.role_id = r.id
          AND ur.user_id = #{id}
    </select>
    <select id="selectByExample" parameterType="org.exam.bean.entity.TUserExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="org.exam.bean.entity.TUserExample">
        delete from t_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.exam.bean.entity.TUser"
            useGeneratedKeys="true">
        insert into t_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="telePhone != null">
                tele_phone,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="isDel != null">
                is_del,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="userface != null">
                userface,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="creater != null">
                creater,
            </if>
            <if test="updater != null">
                updater,
            </if>
            <if test="version != null">
                version,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=CHAR},
            </if>
            <if test="telePhone != null">
                #{telePhone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="isDel != null">
                #{isDel,jdbcType=BIT},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="userface != null">
                #{userface,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=BIGINT},
            </if>
            <if test="creater != null">
                #{creater,jdbcType=INTEGER},
            </if>
            <if test="updater != null">
                #{updater,jdbcType=INTEGER},
            </if>
            <if test="version != null">
                #{version,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.exam.bean.entity.TUserExample" resultType="java.lang.Long">
        select count(*) from t_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.phone != null">
                phone = #{record.phone,jdbcType=CHAR},
            </if>
            <if test="record.telePhone != null">
                tele_phone = #{record.telePhone,jdbcType=VARCHAR},
            </if>
            <if test="record.address != null">
                address = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.isDel != null">
                is_del = #{record.isDel,jdbcType=BIT},
            </if>
            <if test="record.username != null">
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.userface != null">
                userface = #{record.userface,jdbcType=VARCHAR},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=BIGINT},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=BIGINT},
            </if>
            <if test="record.creater != null">
                creater = #{record.creater,jdbcType=INTEGER},
            </if>
            <if test="record.updater != null">
                updater = #{record.updater,jdbcType=INTEGER},
            </if>
            <if test="record.version != null">
                version = #{record.version,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_user
        set id = #{record.id,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        phone = #{record.phone,jdbcType=CHAR},
        tele_phone = #{record.telePhone,jdbcType=VARCHAR},
        address = #{record.address,jdbcType=VARCHAR},
        is_del = #{record.isDel,jdbcType=BIT},
        username = #{record.username,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        userface = #{record.userface,jdbcType=VARCHAR},
        remark = #{record.remark,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=BIGINT},
        update_time = #{record.updateTime,jdbcType=BIGINT},
        creater = #{record.creater,jdbcType=INTEGER},
        updater = #{record.updater,jdbcType=INTEGER},
        version = #{record.version,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="org.exam.bean.entity.TUser">
        update t_user
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=CHAR},
            </if>
            <if test="telePhone != null">
                tele_phone = #{telePhone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="isDel != null">
                is_del = #{isDel,jdbcType=BIT},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="userface != null">
                userface = #{userface,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=BIGINT},
            </if>
            <if test="creater != null">
                creater = #{creater,jdbcType=INTEGER},
            </if>
            <if test="updater != null">
                updater = #{updater,jdbcType=INTEGER},
            </if>
            <if test="version != null">
                version = #{version,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <insert id="insert" parameterType="org.exam.bean.entity.TUser">
        insert into t_user (id,
                            user_id,
                            name,
                            phone,
                            tele_phone,
                            address,
                            is_del,
                            username,
                            password,
                            userface,
                            remark,
                            create_time,
                            update_time,
                            creater,
                            updater,
                            version)
        values (#{id,jdbcType=INTEGER},
                #{userId,jdbcType=VARCHAR},
                #{name,jdbcType=VARCHAR},
                #{phone,jdbcType=CHAR},
                #{telePhone,jdbcType=VARCHAR},
                #{address,jdbcType=VARCHAR},
                #{is_del,jdbcType=BIT},
                #{username,jdbcType=VARCHAR},
                #{password,jdbcType=VARCHAR},
                #{userface,jdbcType=VARCHAR},
                #{remark,jdbcType=VARCHAR},
                #{createTime,jdbcType=BIGINT},
                #{updateTime,jdbcType=BIGINT},
                #{creater,jdbcType=INTEGER},
                #{updater,jdbcType=INTEGER},
                #{version,jdbcType=INTEGER})
    </insert>

    <!-- &lt;select id="selectBy" resultMap="BaseResultMap"&gt;
       select id, user_id, name, phone, tele_phone, address, is_del, username, password,
       userface, remark, create_time, update_time, creater, updater, version
       from t_user
         &lt;where&gt;
             &lt;if test="null!=user and null != username"&gt;
                 username = #{username, jdbcType=VARCHAR}
             &lt;/if&gt;
         &lt;/where&gt;
         &lt;where&gt;
             enable = 1
         &lt;/where&gt;
     &lt;/select&gt;-->
</mapper>